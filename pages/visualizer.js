import { useEffect, useRef, useState } from 'react'
import moment from 'moment';

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import Button from 'react-bootstrap/Button'
import Form from 'react-bootstrap/Form'
import Overlay from 'react-bootstrap/Overlay'
import Tooltip from 'react-bootstrap/Tooltip'

import Datetime from 'react-datetime'

import ImageMarker from 'react-image-marker';

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faLocationPin } from '@fortawesome/free-solid-svg-icons'

import axios from 'axios';

function DeathTip({ death, opacity }) {
  const target = useRef(null);

  return (<div>
  <div
    ref={target}
    style={{
      position: 'absolute',
      bottom: `calc(100% * (1 - ${death.pin.y}))`,
      left: `calc(100% * (${death.pin.x}))`
  }}

  >
    </div>
  <Overlay show={true} target={target.current} shouldUpdatePosition={true} key={Math.random()}>
  <Tooltip style={{ opacity: `calc(100% * ${opacity})` }}>
  {death.desc}
  </Tooltip>
  </Overlay>
    </div>);
}

function Time({ time }) {
  const dateFormat = "YYYY-MM-DD";
  const timeFormat = "hh:mm:ss A";
  const formatted = moment(time).format(dateFormat + " " + timeFormat);

  return <h3 style={{ fontFamily: 'Courier New' }}>{formatted}</h3>;
}

function Map({ name, deaths, count, time }) {

  const [ marker, setMarkers ] = useState([]);

  const src = '/maps/' + name + '.png';

  return (
    <div className={styles.mapdiv}>
      <img src={src} className={styles.map}/>
    {deaths.map((death, i) => <DeathTip death={death} opacity={(i + 1)/deaths.length}/>)}
      <div style={{ position: 'absolute', left: '10%', top: '1%', color: 'white' }}>
        <h3 style={{ fontFamily: 'Courier New' }}>Death: {count}</h3>
      </div>
      <div style={{ position: 'absolute', left: '46%', top: '1%', color: 'white' }}>
        <Time time={time} />
      </div>
    </div>
  );
}

function DeathForm({ deaths }) {
  const [ index, setIndex ] = useState(0);
  const sublist = deaths.slice(Math.max(0, index-9), index+1);
  console.log('On death', index, sublist.length);

  const maps = [ 'overworld', 'underworld' ];

  const death = (index < deaths.length && deaths[index]);
  const map = (death && death.map) || 'overworld';

  const [ playing, setPlaying ] = useState(false);

  useEffect(() => {
    const interval = setTimeout(() => {
      if (playing) {
        if (index + 1 < deaths.length) {
          setIndex(index + 1);
        } else {
          setPlaying(false);
        }
      }
    }, 100);
    return () => clearTimeout(interval);
  });

  return (
    <div className={styles.mapdiv}>
      <Button variant="primary" onClick={() => setPlaying(!playing)}>{ (!playing && 'Play') || 'Stop' }</Button>
      <Form.Range id='index' value={index} onChange={(e) => setIndex(Number(e.target.value))} min={0} max={deaths.length-1}/>
      <Map name={map} deaths={sublist} count={index+1} time={(death && death.time) || moment(0)}/>
    </div>
  );
}

export default function Home() {
  const [ deaths, setDeaths ] = useState([]);

  useEffect(() => {
    axios.get('/data/deaths-stitched.json').then((response) => {
      console.log('Fetched deaths', response);
      setDeaths(response.data.split('\n').slice(0,-1).map(JSON.parse))
    }).catch((error) => {
      console.error('Failed to fetch data', error);
    });
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Death Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <DeathForm deaths={deaths}/>
    </div>
  )
}
